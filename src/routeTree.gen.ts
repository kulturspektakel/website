/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SpendenRouteImport } from './routes/spenden'
import { Route as SpeisekarteRouteImport } from './routes/speisekarte'
import { Route as PlakateRouteImport } from './routes/plakate'
import { Route as NuclinoSsoRouteImport } from './routes/nuclino-sso'
import { Route as MitgliedsantragRouteImport } from './routes/mitgliedsantrag'
import { Route as LogoRouteImport } from './routes/logo'
import { Route as LineupRouteImport } from './routes/lineup'
import { Route as LearnRouteImport } from './routes/learn'
import { Route as InfosRouteImport } from './routes/infos'
import { Route as EventsRouteImport } from './routes/events'
import { Route as BookingRouteImport } from './routes/booking'
import { Route as BadgesRouteImport } from './routes/badges'
import { Route as AngebotRouteImport } from './routes/angebot'
import { Route as RouteRouteImport } from './routes/Route'
import { Route as SlugRouteImport } from './routes/$slug'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LineupIndexRouteImport } from './routes/lineup.index'
import { Route as SpendenQuittungRouteImport } from './routes/spenden_.quittung'
import { Route as NewsArchivRouteImport } from './routes/news.archiv'
import { Route as NewsSlugRouteImport } from './routes/news.$slug'
import { Route as MitgliedsantragDankeRouteImport } from './routes/mitgliedsantrag_.danke'
import { Route as LineupYearRouteImport } from './routes/lineup.$year'
import { Route as EventsIdRouteImport } from './routes/events_.$id'
import { Route as CardHashRouteImport } from './routes/card.$hash'
import { Route as BookingApplicationTypeRouteImport } from './routes/booking_.$applicationType'
import { Route as ApiSpendenquittungRouteImport } from './routes/api.spendenquittung'
import { Route as ApiBadgesRouteImport } from './routes/api.badges'
import { Route as LineupYearSlugRouteImport } from './routes/lineup.$year_.$slug'
import { Route as CardHashKultRouteImport } from './routes/card.$hash.kult'
import { Route as CardHashCrewRouteImport } from './routes/card.$hash.crew'
import { Route as BookingApplicationTypeDankeRouteImport } from './routes/booking_.$applicationType_.danke'

const SpendenRoute = SpendenRouteImport.update({
  id: '/spenden',
  path: '/spenden',
  getParentRoute: () => rootRouteImport,
} as any)
const SpeisekarteRoute = SpeisekarteRouteImport.update({
  id: '/speisekarte',
  path: '/speisekarte',
  getParentRoute: () => rootRouteImport,
} as any)
const PlakateRoute = PlakateRouteImport.update({
  id: '/plakate',
  path: '/plakate',
  getParentRoute: () => rootRouteImport,
} as any)
const NuclinoSsoRoute = NuclinoSsoRouteImport.update({
  id: '/nuclino-sso',
  path: '/nuclino-sso',
  getParentRoute: () => rootRouteImport,
} as any)
const MitgliedsantragRoute = MitgliedsantragRouteImport.update({
  id: '/mitgliedsantrag',
  path: '/mitgliedsantrag',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoRoute = LogoRouteImport.update({
  id: '/logo',
  path: '/logo',
  getParentRoute: () => rootRouteImport,
} as any)
const LineupRoute = LineupRouteImport.update({
  id: '/lineup',
  path: '/lineup',
  getParentRoute: () => rootRouteImport,
} as any)
const LearnRoute = LearnRouteImport.update({
  id: '/learn',
  path: '/learn',
  getParentRoute: () => rootRouteImport,
} as any)
const InfosRoute = InfosRouteImport.update({
  id: '/infos',
  path: '/infos',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsRoute = EventsRouteImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRouteImport,
} as any)
const BookingRoute = BookingRouteImport.update({
  id: '/booking',
  path: '/booking',
  getParentRoute: () => rootRouteImport,
} as any)
const BadgesRoute = BadgesRouteImport.update({
  id: '/badges',
  path: '/badges',
  getParentRoute: () => rootRouteImport,
} as any)
const AngebotRoute = AngebotRouteImport.update({
  id: '/angebot',
  path: '/angebot',
  getParentRoute: () => rootRouteImport,
} as any)
const RouteRoute = RouteRouteImport.update({
  id: '/Route',
  path: '/Route',
  getParentRoute: () => rootRouteImport,
} as any)
const SlugRoute = SlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LineupIndexRoute = LineupIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LineupRoute,
} as any)
const SpendenQuittungRoute = SpendenQuittungRouteImport.update({
  id: '/spenden_/quittung',
  path: '/spenden/quittung',
  getParentRoute: () => rootRouteImport,
} as any)
const NewsArchivRoute = NewsArchivRouteImport.update({
  id: '/news/archiv',
  path: '/news/archiv',
  getParentRoute: () => rootRouteImport,
} as any)
const NewsSlugRoute = NewsSlugRouteImport.update({
  id: '/news/$slug',
  path: '/news/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const MitgliedsantragDankeRoute = MitgliedsantragDankeRouteImport.update({
  id: '/mitgliedsantrag_/danke',
  path: '/mitgliedsantrag/danke',
  getParentRoute: () => rootRouteImport,
} as any)
const LineupYearRoute = LineupYearRouteImport.update({
  id: '/$year',
  path: '/$year',
  getParentRoute: () => LineupRoute,
} as any)
const EventsIdRoute = EventsIdRouteImport.update({
  id: '/events_/$id',
  path: '/events/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const CardHashRoute = CardHashRouteImport.update({
  id: '/card/$hash',
  path: '/card/$hash',
  getParentRoute: () => rootRouteImport,
} as any)
const BookingApplicationTypeRoute = BookingApplicationTypeRouteImport.update({
  id: '/booking_/$applicationType',
  path: '/booking/$applicationType',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSpendenquittungRoute = ApiSpendenquittungRouteImport.update({
  id: '/api/spendenquittung',
  path: '/api/spendenquittung',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiBadgesRoute = ApiBadgesRouteImport.update({
  id: '/api/badges',
  path: '/api/badges',
  getParentRoute: () => rootRouteImport,
} as any)
const LineupYearSlugRoute = LineupYearSlugRouteImport.update({
  id: '/$year_/$slug',
  path: '/$year/$slug',
  getParentRoute: () => LineupRoute,
} as any)
const CardHashKultRoute = CardHashKultRouteImport.update({
  id: '/kult',
  path: '/kult',
  getParentRoute: () => CardHashRoute,
} as any)
const CardHashCrewRoute = CardHashCrewRouteImport.update({
  id: '/crew',
  path: '/crew',
  getParentRoute: () => CardHashRoute,
} as any)
const BookingApplicationTypeDankeRoute =
  BookingApplicationTypeDankeRouteImport.update({
    id: '/booking_/$applicationType_/danke',
    path: '/booking/$applicationType/danke',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$slug': typeof SlugRoute
  '/Route': typeof RouteRoute
  '/angebot': typeof AngebotRoute
  '/badges': typeof BadgesRoute
  '/booking': typeof BookingRoute
  '/events': typeof EventsRoute
  '/infos': typeof InfosRoute
  '/learn': typeof LearnRoute
  '/lineup': typeof LineupRouteWithChildren
  '/logo': typeof LogoRoute
  '/mitgliedsantrag': typeof MitgliedsantragRoute
  '/nuclino-sso': typeof NuclinoSsoRoute
  '/plakate': typeof PlakateRoute
  '/speisekarte': typeof SpeisekarteRoute
  '/spenden': typeof SpendenRoute
  '/api/badges': typeof ApiBadgesRoute
  '/api/spendenquittung': typeof ApiSpendenquittungRoute
  '/booking/$applicationType': typeof BookingApplicationTypeRoute
  '/card/$hash': typeof CardHashRouteWithChildren
  '/events/$id': typeof EventsIdRoute
  '/lineup/$year': typeof LineupYearRoute
  '/mitgliedsantrag/danke': typeof MitgliedsantragDankeRoute
  '/news/$slug': typeof NewsSlugRoute
  '/news/archiv': typeof NewsArchivRoute
  '/spenden/quittung': typeof SpendenQuittungRoute
  '/lineup/': typeof LineupIndexRoute
  '/booking/$applicationType/danke': typeof BookingApplicationTypeDankeRoute
  '/card/$hash/crew': typeof CardHashCrewRoute
  '/card/$hash/kult': typeof CardHashKultRoute
  '/lineup/$year/$slug': typeof LineupYearSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$slug': typeof SlugRoute
  '/Route': typeof RouteRoute
  '/angebot': typeof AngebotRoute
  '/badges': typeof BadgesRoute
  '/booking': typeof BookingRoute
  '/events': typeof EventsRoute
  '/infos': typeof InfosRoute
  '/learn': typeof LearnRoute
  '/logo': typeof LogoRoute
  '/mitgliedsantrag': typeof MitgliedsantragRoute
  '/nuclino-sso': typeof NuclinoSsoRoute
  '/plakate': typeof PlakateRoute
  '/speisekarte': typeof SpeisekarteRoute
  '/spenden': typeof SpendenRoute
  '/api/badges': typeof ApiBadgesRoute
  '/api/spendenquittung': typeof ApiSpendenquittungRoute
  '/booking/$applicationType': typeof BookingApplicationTypeRoute
  '/card/$hash': typeof CardHashRouteWithChildren
  '/events/$id': typeof EventsIdRoute
  '/lineup/$year': typeof LineupYearRoute
  '/mitgliedsantrag/danke': typeof MitgliedsantragDankeRoute
  '/news/$slug': typeof NewsSlugRoute
  '/news/archiv': typeof NewsArchivRoute
  '/spenden/quittung': typeof SpendenQuittungRoute
  '/lineup': typeof LineupIndexRoute
  '/booking/$applicationType/danke': typeof BookingApplicationTypeDankeRoute
  '/card/$hash/crew': typeof CardHashCrewRoute
  '/card/$hash/kult': typeof CardHashKultRoute
  '/lineup/$year/$slug': typeof LineupYearSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$slug': typeof SlugRoute
  '/Route': typeof RouteRoute
  '/angebot': typeof AngebotRoute
  '/badges': typeof BadgesRoute
  '/booking': typeof BookingRoute
  '/events': typeof EventsRoute
  '/infos': typeof InfosRoute
  '/learn': typeof LearnRoute
  '/lineup': typeof LineupRouteWithChildren
  '/logo': typeof LogoRoute
  '/mitgliedsantrag': typeof MitgliedsantragRoute
  '/nuclino-sso': typeof NuclinoSsoRoute
  '/plakate': typeof PlakateRoute
  '/speisekarte': typeof SpeisekarteRoute
  '/spenden': typeof SpendenRoute
  '/api/badges': typeof ApiBadgesRoute
  '/api/spendenquittung': typeof ApiSpendenquittungRoute
  '/booking_/$applicationType': typeof BookingApplicationTypeRoute
  '/card/$hash': typeof CardHashRouteWithChildren
  '/events_/$id': typeof EventsIdRoute
  '/lineup/$year': typeof LineupYearRoute
  '/mitgliedsantrag_/danke': typeof MitgliedsantragDankeRoute
  '/news/$slug': typeof NewsSlugRoute
  '/news/archiv': typeof NewsArchivRoute
  '/spenden_/quittung': typeof SpendenQuittungRoute
  '/lineup/': typeof LineupIndexRoute
  '/booking_/$applicationType_/danke': typeof BookingApplicationTypeDankeRoute
  '/card/$hash/crew': typeof CardHashCrewRoute
  '/card/$hash/kult': typeof CardHashKultRoute
  '/lineup/$year_/$slug': typeof LineupYearSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$slug'
    | '/Route'
    | '/angebot'
    | '/badges'
    | '/booking'
    | '/events'
    | '/infos'
    | '/learn'
    | '/lineup'
    | '/logo'
    | '/mitgliedsantrag'
    | '/nuclino-sso'
    | '/plakate'
    | '/speisekarte'
    | '/spenden'
    | '/api/badges'
    | '/api/spendenquittung'
    | '/booking/$applicationType'
    | '/card/$hash'
    | '/events/$id'
    | '/lineup/$year'
    | '/mitgliedsantrag/danke'
    | '/news/$slug'
    | '/news/archiv'
    | '/spenden/quittung'
    | '/lineup/'
    | '/booking/$applicationType/danke'
    | '/card/$hash/crew'
    | '/card/$hash/kult'
    | '/lineup/$year/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$slug'
    | '/Route'
    | '/angebot'
    | '/badges'
    | '/booking'
    | '/events'
    | '/infos'
    | '/learn'
    | '/logo'
    | '/mitgliedsantrag'
    | '/nuclino-sso'
    | '/plakate'
    | '/speisekarte'
    | '/spenden'
    | '/api/badges'
    | '/api/spendenquittung'
    | '/booking/$applicationType'
    | '/card/$hash'
    | '/events/$id'
    | '/lineup/$year'
    | '/mitgliedsantrag/danke'
    | '/news/$slug'
    | '/news/archiv'
    | '/spenden/quittung'
    | '/lineup'
    | '/booking/$applicationType/danke'
    | '/card/$hash/crew'
    | '/card/$hash/kult'
    | '/lineup/$year/$slug'
  id:
    | '__root__'
    | '/'
    | '/$slug'
    | '/Route'
    | '/angebot'
    | '/badges'
    | '/booking'
    | '/events'
    | '/infos'
    | '/learn'
    | '/lineup'
    | '/logo'
    | '/mitgliedsantrag'
    | '/nuclino-sso'
    | '/plakate'
    | '/speisekarte'
    | '/spenden'
    | '/api/badges'
    | '/api/spendenquittung'
    | '/booking_/$applicationType'
    | '/card/$hash'
    | '/events_/$id'
    | '/lineup/$year'
    | '/mitgliedsantrag_/danke'
    | '/news/$slug'
    | '/news/archiv'
    | '/spenden_/quittung'
    | '/lineup/'
    | '/booking_/$applicationType_/danke'
    | '/card/$hash/crew'
    | '/card/$hash/kult'
    | '/lineup/$year_/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SlugRoute: typeof SlugRoute
  RouteRoute: typeof RouteRoute
  AngebotRoute: typeof AngebotRoute
  BadgesRoute: typeof BadgesRoute
  BookingRoute: typeof BookingRoute
  EventsRoute: typeof EventsRoute
  InfosRoute: typeof InfosRoute
  LearnRoute: typeof LearnRoute
  LineupRoute: typeof LineupRouteWithChildren
  LogoRoute: typeof LogoRoute
  MitgliedsantragRoute: typeof MitgliedsantragRoute
  NuclinoSsoRoute: typeof NuclinoSsoRoute
  PlakateRoute: typeof PlakateRoute
  SpeisekarteRoute: typeof SpeisekarteRoute
  SpendenRoute: typeof SpendenRoute
  ApiBadgesRoute: typeof ApiBadgesRoute
  ApiSpendenquittungRoute: typeof ApiSpendenquittungRoute
  BookingApplicationTypeRoute: typeof BookingApplicationTypeRoute
  CardHashRoute: typeof CardHashRouteWithChildren
  EventsIdRoute: typeof EventsIdRoute
  MitgliedsantragDankeRoute: typeof MitgliedsantragDankeRoute
  NewsSlugRoute: typeof NewsSlugRoute
  NewsArchivRoute: typeof NewsArchivRoute
  SpendenQuittungRoute: typeof SpendenQuittungRoute
  BookingApplicationTypeDankeRoute: typeof BookingApplicationTypeDankeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/spenden': {
      id: '/spenden'
      path: '/spenden'
      fullPath: '/spenden'
      preLoaderRoute: typeof SpendenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/speisekarte': {
      id: '/speisekarte'
      path: '/speisekarte'
      fullPath: '/speisekarte'
      preLoaderRoute: typeof SpeisekarteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plakate': {
      id: '/plakate'
      path: '/plakate'
      fullPath: '/plakate'
      preLoaderRoute: typeof PlakateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nuclino-sso': {
      id: '/nuclino-sso'
      path: '/nuclino-sso'
      fullPath: '/nuclino-sso'
      preLoaderRoute: typeof NuclinoSsoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mitgliedsantrag': {
      id: '/mitgliedsantrag'
      path: '/mitgliedsantrag'
      fullPath: '/mitgliedsantrag'
      preLoaderRoute: typeof MitgliedsantragRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logo': {
      id: '/logo'
      path: '/logo'
      fullPath: '/logo'
      preLoaderRoute: typeof LogoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lineup': {
      id: '/lineup'
      path: '/lineup'
      fullPath: '/lineup'
      preLoaderRoute: typeof LineupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/learn': {
      id: '/learn'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LearnRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/infos': {
      id: '/infos'
      path: '/infos'
      fullPath: '/infos'
      preLoaderRoute: typeof InfosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/booking': {
      id: '/booking'
      path: '/booking'
      fullPath: '/booking'
      preLoaderRoute: typeof BookingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/badges': {
      id: '/badges'
      path: '/badges'
      fullPath: '/badges'
      preLoaderRoute: typeof BadgesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/angebot': {
      id: '/angebot'
      path: '/angebot'
      fullPath: '/angebot'
      preLoaderRoute: typeof AngebotRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Route': {
      id: '/Route'
      path: '/Route'
      fullPath: '/Route'
      preLoaderRoute: typeof RouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$slug': {
      id: '/$slug'
      path: '/$slug'
      fullPath: '/$slug'
      preLoaderRoute: typeof SlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lineup/': {
      id: '/lineup/'
      path: '/'
      fullPath: '/lineup/'
      preLoaderRoute: typeof LineupIndexRouteImport
      parentRoute: typeof LineupRoute
    }
    '/spenden_/quittung': {
      id: '/spenden_/quittung'
      path: '/spenden/quittung'
      fullPath: '/spenden/quittung'
      preLoaderRoute: typeof SpendenQuittungRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/news/archiv': {
      id: '/news/archiv'
      path: '/news/archiv'
      fullPath: '/news/archiv'
      preLoaderRoute: typeof NewsArchivRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/news/$slug': {
      id: '/news/$slug'
      path: '/news/$slug'
      fullPath: '/news/$slug'
      preLoaderRoute: typeof NewsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mitgliedsantrag_/danke': {
      id: '/mitgliedsantrag_/danke'
      path: '/mitgliedsantrag/danke'
      fullPath: '/mitgliedsantrag/danke'
      preLoaderRoute: typeof MitgliedsantragDankeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lineup/$year': {
      id: '/lineup/$year'
      path: '/$year'
      fullPath: '/lineup/$year'
      preLoaderRoute: typeof LineupYearRouteImport
      parentRoute: typeof LineupRoute
    }
    '/events_/$id': {
      id: '/events_/$id'
      path: '/events/$id'
      fullPath: '/events/$id'
      preLoaderRoute: typeof EventsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/card/$hash': {
      id: '/card/$hash'
      path: '/card/$hash'
      fullPath: '/card/$hash'
      preLoaderRoute: typeof CardHashRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/booking_/$applicationType': {
      id: '/booking_/$applicationType'
      path: '/booking/$applicationType'
      fullPath: '/booking/$applicationType'
      preLoaderRoute: typeof BookingApplicationTypeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/spendenquittung': {
      id: '/api/spendenquittung'
      path: '/api/spendenquittung'
      fullPath: '/api/spendenquittung'
      preLoaderRoute: typeof ApiSpendenquittungRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/badges': {
      id: '/api/badges'
      path: '/api/badges'
      fullPath: '/api/badges'
      preLoaderRoute: typeof ApiBadgesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lineup/$year_/$slug': {
      id: '/lineup/$year_/$slug'
      path: '/$year/$slug'
      fullPath: '/lineup/$year/$slug'
      preLoaderRoute: typeof LineupYearSlugRouteImport
      parentRoute: typeof LineupRoute
    }
    '/card/$hash/kult': {
      id: '/card/$hash/kult'
      path: '/kult'
      fullPath: '/card/$hash/kult'
      preLoaderRoute: typeof CardHashKultRouteImport
      parentRoute: typeof CardHashRoute
    }
    '/card/$hash/crew': {
      id: '/card/$hash/crew'
      path: '/crew'
      fullPath: '/card/$hash/crew'
      preLoaderRoute: typeof CardHashCrewRouteImport
      parentRoute: typeof CardHashRoute
    }
    '/booking_/$applicationType_/danke': {
      id: '/booking_/$applicationType_/danke'
      path: '/booking/$applicationType/danke'
      fullPath: '/booking/$applicationType/danke'
      preLoaderRoute: typeof BookingApplicationTypeDankeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface LineupRouteChildren {
  LineupYearRoute: typeof LineupYearRoute
  LineupIndexRoute: typeof LineupIndexRoute
  LineupYearSlugRoute: typeof LineupYearSlugRoute
}

const LineupRouteChildren: LineupRouteChildren = {
  LineupYearRoute: LineupYearRoute,
  LineupIndexRoute: LineupIndexRoute,
  LineupYearSlugRoute: LineupYearSlugRoute,
}

const LineupRouteWithChildren =
  LineupRoute._addFileChildren(LineupRouteChildren)

interface CardHashRouteChildren {
  CardHashCrewRoute: typeof CardHashCrewRoute
  CardHashKultRoute: typeof CardHashKultRoute
}

const CardHashRouteChildren: CardHashRouteChildren = {
  CardHashCrewRoute: CardHashCrewRoute,
  CardHashKultRoute: CardHashKultRoute,
}

const CardHashRouteWithChildren = CardHashRoute._addFileChildren(
  CardHashRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SlugRoute: SlugRoute,
  RouteRoute: RouteRoute,
  AngebotRoute: AngebotRoute,
  BadgesRoute: BadgesRoute,
  BookingRoute: BookingRoute,
  EventsRoute: EventsRoute,
  InfosRoute: InfosRoute,
  LearnRoute: LearnRoute,
  LineupRoute: LineupRouteWithChildren,
  LogoRoute: LogoRoute,
  MitgliedsantragRoute: MitgliedsantragRoute,
  NuclinoSsoRoute: NuclinoSsoRoute,
  PlakateRoute: PlakateRoute,
  SpeisekarteRoute: SpeisekarteRoute,
  SpendenRoute: SpendenRoute,
  ApiBadgesRoute: ApiBadgesRoute,
  ApiSpendenquittungRoute: ApiSpendenquittungRoute,
  BookingApplicationTypeRoute: BookingApplicationTypeRoute,
  CardHashRoute: CardHashRouteWithChildren,
  EventsIdRoute: EventsIdRoute,
  MitgliedsantragDankeRoute: MitgliedsantragDankeRoute,
  NewsSlugRoute: NewsSlugRoute,
  NewsArchivRoute: NewsArchivRoute,
  SpendenQuittungRoute: SpendenQuittungRoute,
  BookingApplicationTypeDankeRoute: BookingApplicationTypeDankeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
